<?xml version="1.0" encoding="UTF-8"?>
<Algo>
    <description texte="" courant="PAUSE"/>
    <extension extnom="inactif"/>
    <fonction fctetat="inactif" fctcode=""/>
    <F2 F2etat="inactif" F2para="" F2lignes="" F2defaut=""/>
    <repere repcode="-10#10#-10#10#2#2" repetat="inactif"/>
    <param totalBoucles="5000000" epaisseurPoint="2" totalAffichages="1000" nbDecimales="8" arrondiAuto="vrai" epaisseurLigne="2" maxBoucle="500000"/>
    <item algoitem="FONCTIONS_UTILISEES" code="200#declarationfonctions">
        <item algoitem="FONCTION displayHangedMan(n)" code="201#displayHangedMan#n">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction"/>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="SI (n == 0) ALORS" code="6#n == 0">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 1) ALORS" code="6#n == 1">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 2) ALORS" code="6#n == 2">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 3) ALORS" code="6#n == 3">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;           /|   |&quot;" code="4#           /|   |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 4) ALORS" code="6#n == 4">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;           /|\\  |&quot;" code="4#           /|\\  |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 5) ALORS" code="6#n == 5">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;           /|\\  |&quot;" code="4#           /|\\  |#1"/>
                <item algoitem="AFFICHER &quot;           /    |&quot;" code="4#           /    |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 6) ALORS" code="6#n == 6">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;            O   |&quot;" code="4#            O   |#1"/>
                <item algoitem="AFFICHER &quot;           /|\\  |&quot;" code="4#           /|\\  |#1"/>
                <item algoitem="AFFICHER &quot;           / \\  |&quot;" code="4#           / \\  |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''&quot;" code="4#          ========='''#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 7) ALORS" code="6#n == 7">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                        | Hey !   &quot;" code="4#                        | Hey !   #1"/>
                <item algoitem="AFFICHER &quot;                 ,     /| You !&quot;" code="4#                 ,     /| You !#1"/>
                <item algoitem="AFFICHER &quot;                 \\    /  &quot;" code="4#                 \\    /  #1"/>
                <item algoitem="AFFICHER &quot;                  \\0    &quot;" code="4#                  \\0    #1"/>
                <item algoitem="AFFICHER &quot;                   |\\_   &quot;" code="4#                   |\\_   #1"/>
                <item algoitem="AFFICHER &quot;                   |      &quot;" code="4#                   |      #1"/>
                <item algoitem="AFFICHER &quot;                  / \\     &quot;" code="4#                  / \\     #1"/>
                <item algoitem="AFFICHER &quot;             ____/___\\____&quot;" code="4#             ____/___\\____#1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 8) ALORS" code="6#n == 8">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                       | Would you like&quot;" code="4#                       | Would you like#1"/>
                <item algoitem="AFFICHER &quot;                      /| to play with me ? &quot;" code="4#                      /| to play with me ? #1"/>
                <item algoitem="AFFICHER &quot;                     /  &quot;" code="4#                     /  #1"/>
                <item algoitem="AFFICHER &quot;                   0     &quot;" code="4#                   0     #1"/>
                <item algoitem="AFFICHER &quot;                 _/|\\_   &quot;" code="4#                 _/|\\_   #1"/>
                <item algoitem="AFFICHER &quot;                   |      &quot;" code="4#                   |      #1"/>
                <item algoitem="AFFICHER &quot;                  / \\     &quot;" code="4#                  / \\     #1"/>
                <item algoitem="AFFICHER &quot;             ____/___\\____&quot;" code="4#             ____/___\\____#1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 9) ALORS" code="6#n == 9">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                      /| Yes ! Would you like&quot;" code="4#                      /| Yes ! Would you like#1"/>
                <item algoitem="AFFICHER &quot;                     / | to know the rules ?&quot;" code="4#                     / | to know the rules ?#1"/>
                <item algoitem="AFFICHER &quot;                 . 0     &quot;" code="4#                 . 0     #1"/>
                <item algoitem="AFFICHER &quot;                 \\/|\\__   &quot;" code="4#                 \\/|\\__   #1"/>
                <item algoitem="AFFICHER &quot;                   |      &quot;" code="4#                   |      #1"/>
                <item algoitem="AFFICHER &quot;                  / \\     &quot;" code="4#                  / \\     #1"/>
                <item algoitem="AFFICHER &quot;             ____/___\\____&quot;" code="4#             ____/___\\____#1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 10) ALORS" code="6#n == 10">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                       | The rules are simple. Someone wants to kill me.&quot;" code="4#                       | The rules are simple. Someone wants to kill me.#1"/>
                <item algoitem="AFFICHER &quot;                      /| And you are the only one who can save me!&quot;" code="4#                      /| And you are the only one who can save me!#1"/>
                <item algoitem="AFFICHER &quot;                     / | You just have to guess a word.&quot;" code="4#                     / | You just have to guess a word.#1"/>
                <item algoitem="AFFICHER &quot;                   0   | You have 7 chances to guess one letter right&quot;" code="4#                   0   | You have 7 chances to guess one letter right#1"/>
                <item algoitem="AFFICHER &quot;                 _/|\\_ | from the word.&quot;" code="4#                 _/|\\_ | from the word.#1"/>
                <item algoitem="AFFICHER &quot;                   |      &quot;" code="4#                   |      #1"/>
                <item algoitem="AFFICHER &quot;                  / \\     &quot;" code="4#                  / \\     #1"/>
                <item algoitem="AFFICHER &quot;             ____/___\\____&quot;" code="4#             ____/___\\____#1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 11) ALORS" code="6#n == 11">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                      ,&quot;" code="4#                      ,#1"/>
                <item algoitem="AFFICHER &quot;                     /  |    Perfect !&quot;" code="4#                     /  |    Perfect !#1"/>
                <item algoitem="AFFICHER &quot;                   0/ __|   Let's play&quot;" code="4#                   0/ __|   Let's play#1"/>
                <item algoitem="AFFICHER &quot;                 \\/|    |      NOW !&quot;" code="4#                 \\/|    |      NOW !#1"/>
                <item algoitem="AFFICHER &quot;                   |      &quot;" code="4#                   |      #1"/>
                <item algoitem="AFFICHER &quot;                  / \\     &quot;" code="4#                  / \\     #1"/>
                <item algoitem="AFFICHER &quot;             ____/___\\____&quot;" code="4#             ____/___\\____#1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 12) ALORS" code="6#n == 12">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;                     Oops.&quot;" code="4#                     Oops.#1"/>
                <item algoitem="AFFICHER &quot;                      /&quot;" code="4#                      /#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;               _     _&quot;" code="4#               _     _#1"/>
                <item algoitem="AFFICHER &quot;                \\   /&quot;" code="4#                \\   /#1"/>
                <item algoitem="AFFICHER &quot;             ____\\ /___&quot;" code="4#             ____\\ /___#1"/>
                <item algoitem="AFFICHER &quot;                  |&quot;" code="4#                  |#1"/>
                <item algoitem="AFFICHER &quot;                 /O\\  &quot;" code="4#                 /O\\  #1"/>
                <item algoitem="AFFICHER &quot;                /   \\ &quot;" code="4#                /   \\ #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="SI (n == 13) ALORS" code="6#n == 13">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="AFFICHER &quot;            +---+&quot;" code="4#            +---+#1"/>
                <item algoitem="AFFICHER &quot;            |   |&quot;" code="4#            |   |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;                |&quot;" code="4#                |#1"/>
                <item algoitem="AFFICHER &quot;          ========='''  The word and the rope are ready !&quot;" code="4#          ========='''  The word and the rope are ready !#1"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="" code="103#commentaire"/>
            <item algoitem="" code="103#commentaire"/>
            <item algoitem="" code="103#commentaire"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
        <item algoitem="FONCTION guessLetter( )" code="201#guessLetter# ">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction">
                <item algoitem="aLetter EST_DU_TYPE CHAINE" code="1#CHAINE#aLetter"/>
            </item>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="LIRE aLetter" code="2#aLetter#pasliste"/>
            <item algoitem="aLetter PREND_LA_VALEUR aLetter.toUpperCase()" code="5#aLetter#aLetter.toUpperCase()#pasliste"/>
            <item algoitem="asciiNumber PREND_LA_VALEUR aLetter.charCodeAt(0)" code="5#asciiNumber#aLetter.charCodeAt(0)#pasliste"/>
            <item algoitem="TANT_QUE (aLetter.length > 1 || asciiNumber &lt; 65 || asciiNumber > 90) FAIRE" code="15#aLetter.length > 1 || asciiNumber &lt; 65 || asciiNumber > 90">
                <item algoitem="DEBUT_TANT_QUE" code="16#debuttantque"/>
                <item algoitem="AFFICHER &quot;You can only choose one letter.&quot;" code="4#You can only choose one letter.#1"/>
                <item algoitem="AFFICHER &quot;Special caracters and numbers are invalid.&quot;" code="4#Special caracters and numbers are invalid.#0"/>
                <item algoitem="LIRE aLetter" code="2#aLetter#pasliste"/>
                <item algoitem="aLetter PREND_LA_VALEUR aLetter.toUpperCase()" code="5#aLetter#aLetter.toUpperCase()#pasliste"/>
                <item algoitem="asciiNumber PREND_LA_VALEUR aLetter.charCodeAt(0)" code="5#asciiNumber#aLetter.charCodeAt(0)#pasliste"/>
                <item algoitem="FIN_TANT_QUE" code="17#fintantque"/>
            </item>
            <item algoitem="RENVOYER aLetter" code="205#aLetter"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
        <item algoitem="FONCTION isAlpha(question1)" code="201#isAlpha#question1">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction">
                <item algoitem="w EST_DU_TYPE CHAINE" code="1#CHAINE#w"/>
                <item algoitem="questionIsAlpha EST_DU_TYPE CHAINE" code="1#CHAINE#questionIsAlpha"/>
                <item algoitem="i EST_DU_TYPE NOMBRE" code="1#NOMBRE#i"/>
                <item algoitem="asciiNumber EST_DU_TYPE NOMBRE" code="1#NOMBRE#asciiNumber"/>
                <item algoitem="booleanIsAlpha EST_DU_TYPE NOMBRE" code="1#NOMBRE#booleanIsAlpha"/>
            </item>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="booleanIsAlpha PREND_LA_VALEUR 1" code="5#booleanIsAlpha#1#pasliste"/>
            <item algoitem="questionIsAlpha PREND_LA_VALEUR question1" code="5#questionIsAlpha#question1#pasliste"/>
            <item algoitem="AFFICHER questionIsAlpha" code="3#questionIsAlpha#1#pasliste"/>
            <item algoitem="LIRE w" code="2#w#pasliste"/>
            <item algoitem="AFFICHER &quot;Show word before upper case :&quot;" code="4#Show word before upper case :#1"/>
            <item algoitem="AFFICHER w" code="3#w#0#pasliste"/>
            <item algoitem="w PREND_LA_VALEUR w.toUpperCase()" code="5#w#w.toUpperCase()#pasliste"/>
            <item algoitem="AFFICHER &quot;Show word after upper case :&quot;" code="4#Show word after upper case :#1"/>
            <item algoitem="AFFICHER w" code="3#w#0#pasliste"/>
            <item algoitem="POUR i ALLANT_DE 0 A w.length - 1" code="12#i#0#w.length - 1">
                <item algoitem="DEBUT_POUR" code="13#debutpour"/>
                <item algoitem="asciiNumber PREND_LA_VALEUR w.charCodeAt(i)" code="5#asciiNumber#w.charCodeAt(i)#pasliste"/>
                <item algoitem="SI (asciiNumber &lt; 65 || asciiNumber > 90) ALORS" code="6#asciiNumber &lt; 65 || asciiNumber > 90">
                    <item algoitem="DEBUT_SI" code="7#debutsi"/>
                    <item algoitem="booleanIsAlpha PREND_LA_VALEUR 0" code="5#booleanIsAlpha#0#pasliste"/>
                    <item algoitem="FIN_SI" code="8#finsi"/>
                </item>
                <item algoitem="FIN_POUR" code="14#finpour"/>
            </item>
            <item algoitem="AFFICHER &quot;Show word after ascii check :&quot;" code="4#Show word after ascii check :#1"/>
            <item algoitem="AFFICHER w" code="3#w#0#pasliste"/>
            <item algoitem="TANT_QUE (booleanIsAlpha == 0) FAIRE" code="15#booleanIsAlpha == 0">
                <item algoitem="DEBUT_TANT_QUE" code="16#debuttantque"/>
                <item algoitem="AFFICHER &quot;Numbers and special characters are invalid.&quot;" code="4#Numbers and special characters are invalid.#1"/>
                <item algoitem="RENVOYER isAlpha(question1)" code="205#isAlpha(question1)"/>
                <item algoitem="FIN_TANT_QUE" code="17#fintantque"/>
            </item>
            <item algoitem="RENVOYER w" code="205#w"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
        <item algoitem="FONCTION startGame(question2)" code="201#startGame#question2">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction">
                <item algoitem="questionGame EST_DU_TYPE CHAINE" code="1#CHAINE#questionGame"/>
                <item algoitem="answerGame EST_DU_TYPE NOMBRE" code="1#NOMBRE#answerGame"/>
                <item algoitem="wordToGuess EST_DU_TYPE CHAINE" code="1#CHAINE#wordToGuess"/>
                <item algoitem="guessedWord EST_DU_TYPE CHAINE" code="1#CHAINE#guessedWord"/>
                <item algoitem="guessedLetter EST_DU_TYPE CHAINE" code="1#CHAINE#guessedLetter"/>
            </item>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="questionGame PREND_LA_VALEUR question2" code="5#questionGame#question2#pasliste"/>
            <item algoitem="APPELER_FONCTION displayHangedMan(7)" code="206#displayHangedMan(7)"/>
            <item algoitem="PAUSE" code="18#pause"/>
            <item algoitem="APPELER_FONCTION displayHangedMan(8)" code="206#displayHangedMan(8)"/>
            <item algoitem="answerGame PREND_LA_VALEUR YesOrNoBoolean()" code="5#answerGame#YesOrNoBoolean()#pasliste"/>
            <item algoitem="SI (answerGame == 1) ALORS" code="6#answerGame == 1">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="APPELER_FONCTION displayRules()" code="206#displayRules()"/>
                <item algoitem="wordToGuess PREND_LA_VALEUR isAlpha(&quot;Choose a word to guess :&quot;)" code="5#wordToGuess#isAlpha(&quot;Choose a word to guess :&quot;)#pasliste"/>
                <item algoitem="AFFICHER &quot;display the word to guess :&quot;" code="4#display the word to guess :#1"/>
                <item algoitem="AFFICHER wordToGuess" code="3#wordToGuess#0#pasliste"/>
                <item algoitem="APPELER_FONCTION isAlpha(&quot;Choose a word to guess :&quot;)" code="206#isAlpha(&quot;Choose a word to guess :&quot;)"/>
                <item algoitem="AFFICHER &quot; &quot;" code="4# #1"/>
                <item algoitem="APPELER_FONCTION displayHangedMan(13)" code="206#displayHangedMan(13)"/>
                <item algoitem="AFFICHER &quot;WORD :      &quot;" code="4#WORD :      #0"/>
                <item algoitem="POUR i ALLANT_DE 0 A wordToGuess.length - 1" code="12#i#0#wordToGuess.length - 1">
                    <item algoitem="DEBUT_POUR" code="13#debutpour"/>
                    <item algoitem="guessedWord PREND_LA_VALEUR &quot;_&quot;" code="5#guessedWord#&quot;_&quot;#pasliste"/>
                    <item algoitem="AFFICHER guessedWord" code="3#guessedWord#0#pasliste"/>
                    <item algoitem="FIN_POUR" code="14#finpour"/>
                </item>
                <item algoitem="AFFICHER &quot;display the word to guess :&quot;" code="4#display the word to guess :#1"/>
                <item algoitem="AFFICHER wordToGuess" code="3#wordToGuess#0#pasliste"/>
                <item algoitem="APPELER_FONCTION guessLetter()" code="206#guessLetter()"/>
                <item algoitem="AFFICHER &quot;right or wrong&quot;" code="4#right or wrong#0"/>
                <item algoitem="AFFICHER &quot;display ____&quot;" code="4#display ____#0"/>
                <item algoitem="AFFICHER &quot;display Hanged&quot;" code="4#display Hanged#0"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="APPELER_FONCTION displayHangedMan(12)" code="206#displayHangedMan(12)"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
        <item algoitem="FONCTION YesOrNoBoolean( question3)" code="201#YesOrNoBoolean# question3">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction">
                <item algoitem="boolean EST_DU_TYPE NOMBRE" code="1#NOMBRE#boolean"/>
                <item algoitem="questionYN EST_DU_TYPE CHAINE" code="1#CHAINE#questionYN"/>
                <item algoitem="answerYN EST_DU_TYPE CHAINE" code="1#CHAINE#answerYN"/>
            </item>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="boolean PREND_LA_VALEUR 0" code="5#boolean#0#pasliste"/>
            <item algoitem="questionYN PREND_LA_VALEUR question3" code="5#questionYN#question3#pasliste"/>
            <item algoitem="AFFICHER questionYN" code="3#questionYN#0#pasliste"/>
            <item algoitem="AFFICHER &quot; (Yes/No)&quot;" code="4# (Yes/No)#1"/>
            <item algoitem="LIRE answerYN" code="2#answerYN#pasliste"/>
            <item algoitem="answerYN PREND_LA_VALEUR answerYN.toLowerCase()" code="5#answerYN#answerYN.toLowerCase()#pasliste"/>
            <item algoitem="TANT_QUE (answerYN != &quot;yes&quot; &amp; answerYN != &quot;no&quot;) FAIRE" code="15#answerYN != &quot;yes&quot; &amp; answerYN != &quot;no&quot;">
                <item algoitem="DEBUT_TANT_QUE" code="16#debuttantque"/>
                <item algoitem="AFFICHER &quot;Invalid.&quot;" code="4#Invalid.#1"/>
                <item algoitem="AFFICHER questionYN" code="3#questionYN#1#pasliste"/>
                <item algoitem="LIRE answerYN" code="2#answerYN#pasliste"/>
                <item algoitem="answerYN PREND_LA_VALEUR answerYN.toLowerCase()" code="5#answerYN#answerYN.toLowerCase()#pasliste"/>
                <item algoitem="FIN_TANT_QUE" code="17#fintantque"/>
            </item>
            <item algoitem="SI (answerYN == &quot;yes&quot;) ALORS" code="6#answerYN == &quot;yes&quot;">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="boolean PREND_LA_VALEUR 1" code="5#boolean#1#pasliste"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="RENVOYER boolean" code="205#boolean"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
        <item algoitem="FONCTION displayRules( )" code="201#displayRules# ">
            <item algoitem="VARIABLES_FONCTION" code="202#declarationsvariablesfonction">
                <item algoitem="booleanRules EST_DU_TYPE NOMBRE" code="1#NOMBRE#booleanRules"/>
            </item>
            <item algoitem="DEBUT_FONCTION" code="203#debutfonction"/>
            <item algoitem="APPELER_FONCTION displayHangedMan(9)" code="206#displayHangedMan(9)"/>
            <item algoitem="booleanRules PREND_LA_VALEUR YesOrNoBoolean()" code="5#booleanRules#YesOrNoBoolean()#pasliste"/>
            <item algoitem="SI (booleanRules == &quot;1&quot;) ALORS" code="6#booleanRules == &quot;1&quot;">
                <item algoitem="DEBUT_SI" code="7#debutsi"/>
                <item algoitem="APPELER_FONCTION displayHangedMan(10)" code="206#displayHangedMan(10)"/>
                <item algoitem="PAUSE" code="18#pause"/>
                <item algoitem="FIN_SI" code="8#finsi"/>
            </item>
            <item algoitem="APPELER_FONCTION displayHangedMan(11)" code="206#displayHangedMan(11)"/>
            <item algoitem="FIN_FONCTION" code="204#finfonction"/>
        </item>
    </item>
    <item algoitem="VARIABLES" code="100#declarationsvariables"/>
    <item algoitem="DEBUT_ALGORITHME" code="101#debutalgo">
        <item algoitem="APPELER_FONCTION startGame()" code="206#startGame()"/>
    </item>
    <item algoitem="FIN_ALGORITHME" code="102#finalgo"/>
</Algo>
